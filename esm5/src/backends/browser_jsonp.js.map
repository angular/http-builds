{"version":3,"file":"browser_jsonp.js","sourceRoot":"","sources":["../../../../../../packages/http/src/backends/browser_jsonp.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;AAEzC,qBAAI,cAAc,GAAG,CAAC,CAAC;AACvB,MAAM,CAAC,qBAAM,UAAU,GAAG,cAAc,CAAC;AACzC,qBAAI,iBAAiB,GAA8B,IAAI,CAAC;;;;AAExD;IACE,qBAAM,CAAC,GAAyB,OAAO,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;IACxE,EAAE,CAAC,CAAC,iBAAiB,KAAK,IAAI,CAAC,CAAC,CAAC;QAC/B,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;KACxC;IACD,MAAM,CAAC,iBAAiB,CAAC;CAC1B;;;;IAKC,sDAAsD;;;;;IACtD,4BAAK;;;;IAAL,UAAM,GAAW;QACf,qBAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,MAAM,CAAC,IAAI,CAAC;KACb;;;;IAED,oCAAa;;;IAAb,cAA0B,MAAM,CAAC,UAAQ,cAAc,EAAI,CAAC,EAAE;;;;;IAE9D,sCAAe;;;;IAAf,UAAgB,EAAU,IAAY,MAAM,CAAI,UAAU,SAAI,EAAE,cAAW,CAAC,EAAE;;;;;;IAE9E,uCAAgB;;;;;IAAhB,UAAiB,EAAU,EAAE,UAAe;QAC1C,qBAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;QAC3C,WAAW,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC;KAC9B;;;;;IAED,uCAAgB;;;;IAAhB,UAAiB,EAAU;QACzB,qBAAM,WAAW,GAAG,oBAAoB,EAAE,CAAC;QAC3C,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;KACxB;IAED,yCAAyC;;;;;IACzC,2BAAI;;;;IAAJ,UAAK,IAAS,IAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,mBAAO,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE;IAE5D,uCAAuC;;;;;IACvC,8BAAO;;;;IAAP,UAAQ,IAAS;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,WAAW,mBAAO,CAAC,IAAI,CAAC,EAAC,CAAC;SAC3C;KACF;;gBA/BF,UAAU;;;;uBAvBX;;SAwBa,YAAY","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nlet _nextRequestId = 0;\nexport const JSONP_HOME = '__ng_jsonp__';\nlet _jsonpConnections: {[key: string]: any}|null = null;\n\nfunction _getJsonpConnections(): {[key: string]: any} {\n  const w: {[key: string]: any} = typeof window == 'object' ? window : {};\n  if (_jsonpConnections === null) {\n    _jsonpConnections = w[JSONP_HOME] = {};\n  }\n  return _jsonpConnections;\n}\n\n// Make sure not to evaluate this in a non-browser environment!\n@Injectable()\nexport class BrowserJsonp {\n  // Construct a <script> element with the specified URL\n  build(url: string): any {\n    const node = document.createElement('script');\n    node.src = url;\n    return node;\n  }\n\n  nextRequestID(): string { return `__req${_nextRequestId++}`; }\n\n  requestCallback(id: string): string { return `${JSONP_HOME}.${id}.finished`; }\n\n  exposeConnection(id: string, connection: any) {\n    const connections = _getJsonpConnections();\n    connections[id] = connection;\n  }\n\n  removeConnection(id: string) {\n    const connections = _getJsonpConnections();\n    connections[id] = null;\n  }\n\n  // Attach the <script> element to the DOM\n  send(node: any) { document.body.appendChild(<Node>(node)); }\n\n  // Remove <script> element from the DOM\n  cleanup(node: any) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(<Node>(node));\n    }\n  }\n}\n"]}