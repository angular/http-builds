{"version":3,"sources":["../../../../modules/@angular/http/src/http_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAQI,EAAA,QAAE,EAAQ,MAAA,eAAA;OAEV,EAAA,YAAE,EAAY,MAAA,0BAAA;OACd,EAAA,UAAE,EAAU,MAAA,wBAAA;OACZ,EAAA,YAAE,EAAa,aAAA,EAAc,MAAA,0BAAA;OAC7B,EAAA,kBAAE,EAAmB,UAAA,EAAW,MAAA,wBAAA;OAChC,EAAA,kBAAE,EAAmB,cAAA,EAAe,MAAA,wBAAA;OACpC,EAAA,mBAAE,EAAoB,eAAA,EAAgB,MAAA,yBAAA;OACtC,EAAA,IAAE,EAAK,KAAA,EAAM,MAAA,QAAA;OACb,EAAA,YAAE,EAAY,MAAA,cAAA;AACrB;;GAEG;AACH;IACE,MAAA,CADO,IAAI,kBAAA,EAAmB,CAAE;AAElC,CAAC;AACD;;;;GAIG;AACH,4BALC,UAAA,EAAA,cAAA;IAMC,MAAM,CALC,IAAI,IAAA,CAAK,UAAC,EAAW,cAAA,CAAe,CAAC;AAM9C,CAAC;AACD;;;;GAIG;AACH,6BATC,YAAA,EAAA,cAAA;IAUC,MAAM,CATC,IAAI,KAAA,CAAM,YAAC,EAAa,cAAA,CAAe,CAAC;AAUjD,CAAC;AACD;;;;GAIG;AACH;IAAA;IAkBA,CAAC;IAvBM,qBAAA,GAAoC;QAO3C,EANE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;oBAOtB,SAAS,EANE;wBAOT,kEAAkE;wBAClE,wDAAwD;wBACxD,EAAC,OANC,EAAQ,IAAA,EAAM,UAAA,EAAY,WAAA,EAAa,IAAA,EAAM,CAAA,UAAE,EAAW,cAAA,CAAe,EAAC;wBAO5E,UAAU;wBACV,EAAC,OANC,EAAQ,cAAA,EAAgB,QAAA,EAAU,kBAAA,EAAmB;wBAOvD,EAAC,OANC,EAAQ,eAAA,EAAiB,QAAA,EAAU,mBAAA,EAAoB;wBAOzD,UAAU;wBACV,EAAC,OANC,EAAQ,YAAA,EAAc,UAAA,EAAY,gCAAA,EAAiC;qBAOtE;iBACF,EANC,EAAG;KAOJ,CANC;IAOF,kBAAkB;IALX,yBAAA,GAAiF,cAAM,OAAA,EAO7F,EAP6F,CAO7F,CANC;IAOF,iBAAC;AAAD,CAlBA,AAkBC,IAAA;AAED;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;AAC1B,CAAC;AAED;;;;GAIG;AACH;IAAA;IAiBA,CAAC;IA/BM,sBAAA,GAAoC;QAgB3C,EAfE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;oBAgBtB,SAAS,EAfE;wBAgBT,kEAAkE;wBAClE,wDAAwD;wBACxD,EAAC,OAfC,EAAQ,KAAA,EAAO,UAAA,EAAY,YAAA,EAAc,IAAA,EAAM,CAAA,YAAE,EAAa,cAAA,CAAe,EAAC;wBAgBhF,YAAY;wBACZ,EAAC,OAfC,EAAQ,cAAA,EAAgB,QAAA,EAAU,kBAAA,EAAmB;wBAgBvD,EAAC,OAfC,EAAQ,eAAA,EAAiB,QAAA,EAAU,mBAAA,EAAoB;wBAgBzD,EAAC,OAfC,EAAQ,YAAA,EAAc,QAAA,EAAU,aAAA,EAAc;qBAgBjD;iBACF,EAfC,EAAG;KAgBJ,CAfC;IAgBF,kBAAkB;IAdX,0BAAA,GAAiF,cAAM,OAAA,EAgB7F,EAhB6F,CAgB7F,CAfC;IAgBF,kBAAC;AAAD,CAjBA,AAiBC,IAAA;AAED;IACA,gBAAgB;IAChB,WAAW,CAAC,UAAU,CAAC;IACvB;;;OAGG;IACH,WAAW,CAAC,cAAc,CAAC;AAC3B,CAAC","file":"http_module.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\nimport {NgModule} from '@angular/core';\n\nimport {BrowserJsonp} from './backends/browser_jsonp';\nimport {BrowserXhr} from './backends/browser_xhr';\nimport {JSONPBackend, JSONPBackend_} from './backends/jsonp_backend';\nimport {CookieXSRFStrategy, XHRBackend} from './backends/xhr_backend';\nimport {BaseRequestOptions, RequestOptions} from './base_request_options';\nimport {BaseResponseOptions, ResponseOptions} from './base_response_options';\nimport {Http, Jsonp} from './http';\nimport {XSRFStrategy} from './interfaces';\n/**\n * @return {?}\n */\nexport function _createDefaultCookieXSRFStrategy() {\n  return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n  return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function jsonpFactory(jsonpBackend: JSONPBackend, requestOptions: RequestOptions): Jsonp {\n  return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n * \n * \\@experimental\n */\nexport class HttpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n    BrowserXhr,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    XHRBackend,\n    {provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HttpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttpModule.ctorParameters;\n}\n\n/**\n * The module that includes jsonp's providers\n * \n * \\@experimental\n */\nexport class JsonpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions]},\n    BrowserJsonp,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    {provide: JSONPBackend, useClass: JSONPBackend_},\n  ],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonpModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}