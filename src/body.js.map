{"version":3,"file":"body.js","sourceRoot":"","sources":["../../../../modules/@angular/http/src/body.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,qBAA6B,oBAAoB,CAAC,CAAA;AAElD,2BAA8C,cAAc,CAAC,CAAA;AAC7D,kCAA8B,qBAAqB,CAAC,CAAA;AAGpD;;;GAGG;AACH;IAAA;IAiEA,CAAC;IA3DC;;OAEG;IACH,mBAAI,GAAJ;QACE,EAAE,CAAC,CAAC,eAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,WAAI,CAAC,KAAK,CAAS,IAAI,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,WAAW,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,WAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;OAEG;IACH,mBAAI,GAAJ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,mCAAe,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,WAAW,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,WAAW,CAAc,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACnF,CAAC;QAED,EAAE,CAAC,CAAC,uBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,WAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,0BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,WAAW,CAAC,CAAC,CAAC;YACtC,MAAM,CAAc,IAAI,CAAC,KAAK,CAAC;QACjC,CAAC;QAED,MAAM,CAAC,gCAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED;;QAEI;IACJ,mBAAI,GAAJ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAO,IAAI,CAAC,KAAK,CAAC;QAC1B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,WAAW,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAChC,CAAC;QAED,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;IAC9E,CAAC;IACH,WAAC;AAAD,CAAC,AAjED,IAiEC;AAjEqB,YAAI,OAiEzB,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Json, isString} from '../src/facade/lang';\n\nimport {isJsObject, stringToArrayBuffer} from './http_utils';\nimport {URLSearchParams} from './url_search_params';\n\n\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nexport abstract class Body {\n  /**\n   * @internal\n   */\n  protected _body: any;\n\n  /**\n   * Attempts to return body as parsed `JSON` object, or raises an exception.\n   */\n  json(): any {\n    if (isString(this._body)) {\n      return Json.parse(<string>this._body);\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return Json.parse(this.text());\n    }\n\n    return this._body;\n  }\n\n  /**\n   * Returns the body as a string, presuming `toString()` can be called on the response body.\n   */\n  text(): string {\n    if (this._body instanceof URLSearchParams) {\n      return this._body.toString();\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return String.fromCharCode.apply(null, new Uint16Array(<ArrayBuffer>this._body));\n    }\n\n    if (isJsObject(this._body)) {\n      return Json.stringify(this._body);\n    }\n\n    return this._body.toString();\n  }\n\n  /**\n   * Return the body as an ArrayBuffer\n   */\n  arrayBuffer(): ArrayBuffer {\n    if (this._body instanceof ArrayBuffer) {\n      return <ArrayBuffer>this._body;\n    }\n\n    return stringToArrayBuffer(this.text());\n  }\n\n  /**\n    * Returns the request's body as a Blob, assuming that body exists.\n    */\n  blob(): Blob {\n    if (this._body instanceof Blob) {\n      return <Blob>this._body;\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return new Blob([this._body]);\n    }\n\n    throw new Error('The request body isn\\'t either a blob or an array buffer');\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}