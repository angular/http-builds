{"version":3,"sources":["../../../../modules/@angular/http/src/body.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,mBAAE,EAAmB,MAAA,cAAA,CAAA;AAC5B,OAAO,EAAA,eAAE,EAAe,MAAA,qBAAA,CAAA;AACxB;;;;GAIG;AACH;IAAA;IAqEA,CAAC;IAhED;;;OAGG;IACH,mBACG,GADH;QACI,EAAE,CAAC,CAAC,OACO,IAAA,CAAK,KAAC,KAAS,QAAA,CAAS,CAAC,CAAA;YAAlC,MAAM,CACC,IAAA,CAAK,KAAC,CAAK,gBAAA,CAAA,CAAQ,IAAC,CAAI,KAAC,CAAA,CAAK,CAAC;QAAxC,CAAC;QAED,EAAE,CAAC,CAAC,IACC,CAAI,KAAC,YAAgB,WAAA,CAAY,CAAC,CAAA;YAArC,MAAM,CACC,IAAA,CAAK,KAAC,CAAK,IAAC,CAAI,IAAC,EAAI,CAAE,CAAC;QAAjC,CAAC;QAED,MAAM,CACC,IAAA,CAAK,KAAC,CAAK;IAApB,CAAC;IACH;;;OAGG;IACH,mBACG,GADH;QACI,EAAE,CAAC,CAAC,IACC,CAAI,KAAC,YAAgB,eAAA,CAAgB,CAAC,CAAA;YAAzC,MAAM,CACC,IAAA,CAAK,KAAC,CAAK,QAAC,EAAQ,CAAE;QAA/B,CAAC;QAED,EAAE,CAAC,CAAC,IACC,CAAI,KAAC,YAAgB,WAAA,CAAY,CAAC,CAAA;YAArC,MAAM,CACC,MAAA,CAAO,YAAC,CAAY,KAAC,CAAK,IAAC,EAAK,IAAI,WAAA,CAAY,gBAAA,CAAA,CAAa,IAAC,CAAI,KAAC,CAAA,CAAK,CAAC,CAAC;QAAnF,CAAC;QAED,EAAE,CAAC,CAAC,IACC,CAAI,KAAC,IAAQ,IAAA,CAAK,CAAC,CAAA;YAAtB,MAAM,CACC,EAAA,CAAG;QAAZ,CAAC;QAED,EAAE,CAAC,CAAC,OACO,IAAA,CAAK,KAAC,KAAS,QAAA,CAAS,CAAC,CAAA;YAAlC,MAAM,CACC,IAAA,CAAK,SAAC,CAAS,IAAC,CAAI,KAAC,EAAM,IAAA,EAAM,CAAA,CAAE,CAAC;QAA7C,CAAC;QAED,MAAM,CACC,IAAA,CAAK,KAAC,CAAK,QAAC,EAAQ,CAAE;IAA/B,CAAC;IACH;;;OAGG;IACH,0BACG,GADH;QACI,EAAE,CAAC,CAAC,IACC,CAAI,KAAC,YAAgB,WAAA,CAAY,CAAC,CAAA;YAArC,MAAM,CAAiB,CACH,IAAC,CAAI,KAAC,CAAA,CAAK;QAAjC,CAAC;QAED,MAAM,CACC,mBAAA,CAAoB,IAAC,CAAI,IAAC,EAAI,CAAE,CAAC;IAA1C,CAAC;IACH;;;OAGG;IACH,mBACG,GADH;QACI,EAAE,CAAC,CAAC,IACC,CAAI,KAAC,YAAgB,IAAA,CAAK,CAAC,CAAA;YAA9B,MAAM,CAAiB,CACV,IAAC,CAAI,KAAC,CAAA,CAAK;QAA1B,CAAC;QAED,EAAE,CAAC,CAAC,IACC,CAAI,KAAC,YAAgB,WAAA,CAAY,CAAC,CAAA;YAArC,MAAM,CACC,IAAI,IAAA,CAAK,CAAC,IAAC,CAAI,KAAC,CAAK,CAAC,CAAC;QAAhC,CAAC;QAED,MACM,IAAI,KAAA,CAAM,0DAAC,CAA0D,CAAC;IAA9E,CAAC;IACH,WAAC;AAAD,CArEA,AAqEC,IAAA;;AAED;IACA;;;OAGG;IACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;AACrB,CAAC","file":"body.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringToArrayBuffer} from './http_utils';\nimport {URLSearchParams} from './url_search_params';\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nexport abstract class Body {\n  /**\n   * @internal\n   */\n  protected _body: any;\n/**\n * Attempts to return body as parsed `JSON` object, or raises an exception.\n * @return {?}\n */\njson(): any {\n    if (typeof this._body === 'string') {\n      return JSON.parse( /** @type {?} */((<string>this._body)));\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return JSON.parse(this.text());\n    }\n\n    return this._body;\n  }\n/**\n * Returns the body as a string, presuming `toString()` can be called on the response body.\n * @return {?}\n */\ntext(): string {\n    if (this._body instanceof URLSearchParams) {\n      return this._body.toString();\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return String.fromCharCode.apply(null, new Uint16Array( /** @type {?} */((<ArrayBuffer>this._body))));\n    }\n\n    if (this._body == null) {\n      return '';\n    }\n\n    if (typeof this._body === 'object') {\n      return JSON.stringify(this._body, null, 2);\n    }\n\n    return this._body.toString();\n  }\n/**\n * Return the body as an ArrayBuffer\n * @return {?}\n */\narrayBuffer(): ArrayBuffer {\n    if (this._body instanceof ArrayBuffer) {\n      return /** @type {?} */(( <ArrayBuffer>this._body));\n    }\n\n    return stringToArrayBuffer(this.text());\n  }\n/**\n * Returns the request's body as a Blob, assuming that body exists.\n * @return {?}\n */\nblob(): Blob {\n    if (this._body instanceof Blob) {\n      return /** @type {?} */(( <Blob>this._body));\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return new Blob([this._body]);\n    }\n\n    throw new Error('The request body isn\\'t either a blob or an array buffer');\n  }\n}\n\nfunction Body_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nBody.prototype._body;\n}\n\n"]}